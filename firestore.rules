rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isDictionaryOwner(dictionaryId) {
      return get(/databases/$(database)/documents/dictionaries/$(dictionaryId)).data.owner == request.auth.uid;
    }
    
    function isDictionaryEditor(dictionaryId) {
      let dictionary = get(/databases/$(database)/documents/dictionaries/$(dictionaryId));
      return dictionary.data.owner == request.auth.uid ||
             (request.auth.token.email != null && 
              get(/databases/$(database)/documents/dictionaries/$(dictionaryId)/collaborators/$(request.auth.token.email)).data.role == 'editor');
    }
    
    function isDictionaryCollaborator(dictionaryId) {
      return request.auth.token.email != null && 
             exists(/databases/$(database)/documents/dictionaries/$(dictionaryId)/collaborators/$(request.auth.token.email));
    }
    
    // Private dictionary rules
    match /users/{userId}/words/{wordId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Shared dictionary rules
    match /dictionaries/{dictionaryId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && isDictionaryOwner(dictionaryId);
      allow delete: if isSignedIn() && isDictionaryOwner(dictionaryId);

      // Words subcollection
      match /words/{wordId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && isDictionaryEditor(dictionaryId);
      }
      
      // Collaborators subcollection
      match /collaborators/{collaboratorEmail} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && isDictionaryOwner(dictionaryId);
        allow update: if isSignedIn() && isDictionaryOwner(dictionaryId);
        allow delete: if isSignedIn() && (
          isDictionaryOwner(dictionaryId) || 
          (isDictionaryCollaborator(dictionaryId) && request.auth.token.email == collaboratorEmail)
        );
      }
    }
    
    // Allow listing dictionaries - users can list all dictionaries
    // Individual document access is still controlled by the document rules
    match /dictionaries {
      allow list: if isSignedIn();
    }
    
    // User profiles
    match /users/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Test collection for debugging
    match /test/{document=**} {
      allow read, write: if isSignedIn();
    }
  }
} 