import Foundation

enum Loc {
    // MARK: - Tab Bar
    enum TabBar {
        static let words = "tabbar.words"
        static let idioms = "tabbar.idioms"
        static let quizzes = "tabbar.quizzes"
        static let progress = "tabbar.progress"
        static let settings = "tabbar.settings"
    }

    // MARK: - Navigation Titles
    enum Navigation {
        static let wordDetails = "navigation.word_details"
        static let idiomDetails = "navigation.idiom_details"
        static let addTags = "navigation.add_tags"
        static let about = "navigation.about"
        static let quizResults = "navigation.quiz_results"
        static let spellingQuiz = "navigation.spelling_quiz"
        static let definitionQuiz = "navigation.definition_quiz"
        static let close = "navigation.close"
        static let closeScreen = "navigation.close_screen"
    }

    // MARK: - Common Actions
    enum Actions {
        static let done = "actions.done"
        static let save = "actions.save"
        static let saveWord = "actions.save_word"
        static let cancel = "actions.cancel"
        static let confirm = "actions.confirm"
        static let search = "actions.search"
        static let delete = "actions.delete"
        static let edit = "actions.edit"
        static let add = "actions.add"
        static let next = "actions.next"
        static let back = "actions.back"
        static let exit = "actions.exit"
        static let ok = "actions.ok"
        static let yes = "actions.yes"
        static let no = "actions.no"
        static let tryAgain = "actions.try_again"
        static let viewAll = "actions.view_all"
        static let listen = "actions.listen"
        static let create = "actions.create"
        static let manage = "actions.manage"
        static let select = "actions.select"
        static let selectWord = "actions.select_word"
        static let selectIdiom = "actions.select_idiom"
        static let selectQuiz = "actions.select_quiz"
        static let signOut = "actions.sign_out"
        static let signIn = "actions.sign_in"
        static let upgrade = "actions.upgrade"
        static let learnMore = "actions.learn_more"
        static let copy = "actions.copy"
        static let refresh = "actions.refresh"
        static let clear = "actions.clear"
        static let reset = "actions.reset"
        static let test = "actions.test"
        static let check = "actions.check"
        static let verify = "actions.verify"
        static let show = "actions.show"
        static let send = "actions.send"
        static let request = "actions.request"
        static let sync = "actions.sync"
        static let upload = "actions.upload"
        static let download = "actions.download"
        static let importWords = "actions.import_words"
        static let exportWords = "actions.export_words"
        static let stopWatching = "actions.stop_watching"
        static let makeViewer = "actions.make_viewer"
        static let makeEditor = "actions.make_editor"
        static let remove = "actions.remove"
        static let skipForNow = "actions.skip_for_now"
        static let linkGoogle = "actions.link_google"
        static let linkApple = "actions.link_apple"
        static let toggleLike = "actions.toggle_like"
        static let toggleFavorite = "actions.toggle_favorite"
    }

    // MARK: - Onboarding
    enum Onboarding {
        static let welcomeTo = "onboarding.welcome_to"
        static let myDictionary = "onboarding.my_dictionary"
        static let personalVocabularyCompanion = "onboarding.personal_vocabulary_companion"
        static let buildYourVocabulary = "onboarding.build_your_vocabulary"
        static let personalizedLearning = "onboarding.personalized_learning"
        static let youreAllSet = "onboarding.youre_all_set"
        static let startBuildingVocabulary = "onboarding.start_building_vocabulary"
        static let getStarted = "onboarding.get_started"
        static let nextStep = "onboarding.next_step"
        static let personalWordList = "onboarding.personal_word_list"
        static let createOrganizeVocabulary = "onboarding.create_organize_vocabulary"
        static let findDefinitions = "onboarding.find_definitions"
        static let comprehensiveDefinitions = "onboarding.comprehensive_definitions"
        static let collectIdioms = "onboarding.collect_idioms"
        static let learnPracticeIdioms = "onboarding.learn_practice_idioms"
        static let smartQuizzes = "onboarding.smart_quizzes"
        static let adaptiveQuizzes = "onboarding.adaptive_quizzes"
        static let progressTracking = "onboarding.progress_tracking"
        static let visualInsights = "onboarding.visual_insights"
        static let collaborativeLearning = "onboarding.collaborative_learning"
        static let shareDictionaries = "onboarding.share_dictionaries"
        static let back = "onboarding.back"
        static let next = "onboarding.next"
        static let personalWordListDescription = "onboarding.personal_word_list_description"
        static let findDefinitionsDescription = "onboarding.find_definitions_description"
        static let collectIdiomsDescription = "onboarding.collect_idioms_description"
        static let smartQuizzesDescription = "onboarding.smart_quizzes_description"
        static let progressTrackingDescription = "onboarding.progress_tracking_description"
        static let collaborativeLearningDescription = "onboarding.collaborative_learning_description"
    }

    // MARK: - Words
    enum Words {
        static let addWord = "words.add_word"
        static let addYourFirstWord = "words.add_your_first_word"
        static let addMoreWords = "words.add_more_words"
        static let addToSharedDictionary = "words.add_to_shared_dictionary"
        static let addNewWord = "words.add_new_word"
        static let deleteWord = "words.delete_word"
        static let deleteWordConfirmation = "words.delete_word_confirmation"
        static let transcription = "words.transcription"
        static let partOfSpeech = "words.part_of_speech"
        static let definition = "words.definition"
        static let difficulty = "words.difficulty"
        static let language = "words.language"
        static let inputLanguage = "words.input_language"
        static let tags = "words.tags"
        static let word = "words.word"
        static let words = "words.words"
        static let createTags = "words.create_tags"
        static let allWords = "words.all_words"
        static let favorite = "words.favorite"
        static let favoriteWords = "words.favorite_words"
        static let search = "words.search"
        static let searchWords = "words.search_words"
        static let searchResults = "words.search_results"
        static let tag = "words.tag"
        static let taggedWords = "words.tagged_words"
        static let new = "words.new"
        static let newWords = "words.new_words"
        static let inProgress = "words.in_progress"
        static let wordsInProgress = "words.words_in_progress"
        static let needsReview = "words.needs_review"
        static let wordsNeedingReview = "words.words_needing_review"
        static let mastered = "words.mastered"
        static let masteredWords = "words.mastered_words"
        static let wordsCount = "words.words_count"
        static let sort = "words.sort"
        static let filter = "words.filter"
        static let latestFirst = "words.latest_first"
        static let earliestFirst = "words.earliest_first"
        static let alphabetically = "words.alphabetically"
        static let byPartOfSpeech = "words.by_part_of_speech"
        static let typeWord = "words.type_word"
        static let sharedDictionary = "words.shared_dictionary"
        static let privateDictionary = "words.private_dictionary"
        static let impressiveVocabulary = "words.impressive_vocabulary"
        static let impressiveVocabularyMessage = "words.impressive_vocabulary_message"
        static let examples = "words.examples"
        static let noExamplesYet = "words.no_examples_yet"
        static let typeExampleHere = "words.type_example_here"
        static let addExample = "words.add_example"
        static let editExample = "words.edit_example"
        static let score = "words.score"
        static let quizBased = "words.quiz_based"
        static let noTagsAddedYet = "words.no_tags_added_yet"
        static let addTag = "words.add_tag"
        static let noTagsSelected = "words.no_tags_selected"
        static let errorLoadingDefinitions = "words.error_loading_definitions"
        static let typeWordAndPressSearch = "words.type_word_and_press_search"
        static let wordDetails = "words.word_details"
        static let noTranscription = "words.no_transcription"
        static let noDefinition = "words.no_definition"
    }

    // MARK: - Idioms
    enum Idioms {
        static let addIdiom = "idioms.add_idiom"
        static let addNewIdiom = "idioms.add_new_idiom"
        static let idiom = "idioms.idiom"
        static let idioms = "idioms.idioms"
        static let noIdiomsFound = "idioms.no_idioms_found"
        static let addThisIdiom = "idioms.add_this_idiom"
        static let beginAddIdioms = "idioms.begin_add_idioms"
        static let allIdioms = "idioms.all_idioms"
        static let favoriteIdioms = "idioms.favorite_idioms"
        static let foundIdioms = "idioms.found_idioms"
        static let examples = "idioms.examples"
        static let noExamplesYet = "idioms.no_examples_yet"
        static let typeExampleHere = "idioms.type_example_here"
        static let addExample = "idioms.add_example"
        static let editExample = "idioms.edit_example"
        static let deleteIdiom = "idioms.delete_idiom"
        static let deleteIdiomConfirmation = "idioms.delete_idiom_confirmation"
        static let searchIdioms = "idioms.search_idioms"
        static let favorites = "idioms.favorites"
        static let found = "idioms.found"
        static let idiomsCount = "idioms.idioms_count"
        static let sort = "idioms.sort"
        static let filter = "idioms.filter"
        static let latestFirst = "idioms.latest_first"
        static let earliestFirst = "idioms.earliest_first"
        static let alphabetically = "idioms.alphabetically"
    }

    // MARK: - Quizzes
    enum Quizzes {
        static let quizUnavailable = "quizzes.quiz_unavailable"
        static let backToQuizzes = "quizzes.back_to_quizzes"
        static let yourAnswer = "quizzes.your_answer"
        static let submitAnswer = "quizzes.submit_answer"
        static let nextWord = "quizzes.next_word"
        static let finish = "quizzes.finish"
        static let yourResults = "quizzes.your_results"
        static let finalScore = "quizzes.final_score"
        static let correctAnswers = "quizzes.correct_answers"
        static let bestStreak = "quizzes.best_streak"
        static let accuracy = "quizzes.accuracy"
        static let chooseCorrectDefinition = "quizzes.choose_correct_definition"
        static let word = "quizzes.word"
        static let quizTypes = "quizzes.quiz_types"
        static let practiceSettings = "quizzes.practice_settings"
        static let configureQuizExperience = "quizzes.configure_quiz_experience"
        static let practiceHardWordsOnly = "quizzes.practice_hard_words_only"
        static let focusWordsNeedReview = "quizzes.focus_words_need_review"
        static let notEnoughWordsReview = "quizzes.not_enough_words_review"
        static let wordsPerSession = "quizzes.words_per_session"
        static let numberWords = "quizzes.number_words"
        static let selectDictionary = "quizzes.select_dictionary"
        static let noDifficultWordsAvailable = "quizzes.no_difficult_words_available"
        static let spellingQuizDescription = "quizzes.spelling_quiz_description"
        static let definitionQuizDescription = "quizzes.definition_quiz_description"
        static let progress = "quizzes.progress"
        static let streak = "quizzes.streak"
        static let score = "quizzes.score"
        static let best = "quizzes.best"
        static let hint = "quizzes.hint"
        static let attempt = "quizzes.attempt"
        static let correct = "quizzes.correct"
        static let wellDone = "quizzes.well_done"
        static let keepUpGoodWork = "quizzes.keep_up_good_work"
        static let correctWordIs = "quizzes.correct_word_is"
        static let movingToNextWord = "quizzes.moving_to_next_word"
        static let incorrect = "quizzes.incorrect"
        static let movingToNextQuestion = "quizzes.moving_to_next_question"
        static let quizComplete = "quizzes.quiz_complete"
        static let greatJobCompletedSpellingQuiz = "quizzes.great_job_completed_spelling_quiz"
        static let greatJobCompletedDefinitionQuiz = "quizzes.great_job_completed_definition_quiz"
        static let skipWord = "quizzes.skip_word"
        static let incorrectMovingToNextQuestion = "quizzes.incorrect_moving_to_next_question"
        static let contributions = "quizzes.contributions"
        static let notEnoughWordsAvailable = "quizzes.not_enough_words_available"
        static let needAtLeastWords = "quizzes.need_at_least_words"
        static let sharedDictionaryNeedsMoreWords = "quizzes.shared_dictionary_needs_more_words"
        static let startBuildingVocabulary = "quizzes.start_building_vocabulary"
        static let keepAddingWords = "quizzes.keep_adding_words"
        static let askDictionaryOwnerAddWords = "quizzes.ask_dictionary_owner_add_words"
        static let switchDifferentDictionary = "quizzes.switch_different_dictionary"
        static let addWordsToSharedDictionary = "quizzes.add_words_to_shared_dictionary"
        static let addYourFirstWord = "quizzes.add_your_first_word"
        static let addMoreWords = "quizzes.add_more_words"
        static let youCanPracticeVocabulary = "quizzes.you_can_practice_vocabulary"
        static let selectSharedDictionaryPopulated = "quizzes.select_shared_dictionary_populated"
        static let numberWordsPracticeSession = "quizzes.number_words_practice_session"
        static let minWords = "quizzes.min_words"
        static let maxWords = "quizzes.max_words"
        static let sharedDictionaryNeedsHardWords = "quizzes.shared_dictionary_needs_hard_words"
        static let needsAtLeastWordsStartQuizzes = "quizzes.needs_at_least_words_start_quizzes"
        static let needAtLeastHardWordPractice = "quizzes.need_at_least_hard_word_practice"
        static let needAtLeastWordsStartQuizzes = "quizzes.need_at_least_words_start_quizzes"
        static let currentlyHaveWords = "quizzes.currently_have_words"
        static let progressFormat = "quizzes.progress_format"
        static let streakFormat = "quizzes.streak_format"
        static let scoreFormat = "quizzes.score_format"
        static let bestFormat = "quizzes.best_format"
        static let askDictionaryOwnerAddWordsOrSwitch = "quizzes.ask_dictionary_owner_add_words_or_switch"
    }

    // MARK: - App
    enum App {
        static let myDictionary = "app.my_dictionary"
        static let loading = "app.loading"
        static let somethingWentWrong = "app.something_went_wrong"
        static let tryAgain = "app.try_again"
        static let error = "app.error"
        static let oops = "app.oops"
        static let unknown = "app.unknown"
        static let retry = "app.retry"
        static let addExample = "app.add_example"
        static let addToSharedDictionary = "app.add_to_shared_dictionary"
        static let addCollaborator = "app.add_collaborator"
        static let deleteDictionary = "app.delete_dictionary"
        static let enterDefinition = "app.enter_definition"
        static let selectValue = "app.select_value"
        static let pronunciation = "app.pronunciation"
        static let tags = "app.tags"
        static let selectDefinition = "app.select_definition"
        static let translatingWord = "app.translating_word"
        static let translatingDefinitions = "app.translating_definitions"
        static let typeWordHere = "app.type_word_here"
        static let emailAddress = "app.email_address"
        static let name = "app.name"
        static let example = "app.example"
        static let transcription = "app.transcription"
        static let definition = "app.definition"
        static let importSuccessful = "app.import_successful"
        static let importSuccessfulMessage = "app.import_successful_message"
        static let noWordsImported = "app.no_words_imported"
        static let noWordsImportedMessage = "app.no_words_imported_message"

        static let deleteTag = "app.delete_tag"
        static let deleteTagConfirmation = "app.delete_tag_confirmation"
        static let cantShareWord = "app.cant_share_word"
        static let collaboratorDetails = "app.collaborator_details"
        static let rolePermissions = "app.role_permissions"
        static let note = "app.note"
        static let dictionaryInfo = "app.dictionary_info"
        static let collaborators = "app.collaborators"
        static let allResults = "app.all_results"
        static let partOfSpeech = "app.part_of_speech"
        static let language = "app.language"
        static let tagName = "app.tag_name"
        static let tagColor = "app.tag_color"
        static let privateDictionary = "app.private_dictionary"
        static let sharedDictionaries = "app.shared_dictionaries"
        static let aboutMyDictionary = "app.about_my_dictionary"
        static let wordStartsWith = "app.word_starts_with"
        static let sendTestNotification = "app.send_test_notification"
        static let enterEmailAddress = "app.enter_email_address"
        static let enterEmailAddressForNotification = "app.enter_email_address_for_notification"
        static let userInformation = "app.user_information"
        static let email = "app.email"
        static let userID = "app.user_id"
        static let authState = "app.auth_state"
        static let proUser = "app.pro_user"
        static let pushNotifications = "app.push_notifications"
    }

    // MARK: - Analytics
    enum Analytics {
        static let overview = "analytics.overview"
        static let recentQuizResults = "analytics.recent_quiz_results"
        static let noQuizResultsYet = "analytics.no_quiz_results_yet"
        static let completeFirstQuiz = "analytics.complete_first_quiz"
        static let vocabularyGrowth = "analytics.vocabulary_growth"
        static let noGrowthDataYet = "analytics.no_growth_data_yet"
        static let completeQuizzesGrowth = "analytics.complete_quizzes_growth"
        static let timePeriod = "analytics.time_period"
        static let week = "analytics.week"
        static let month = "analytics.month"
        static let year = "analytics.year"
        static let practiceTime = "analytics.practice_time"
        static let sessions = "analytics.sessions"
        static let allResults = "analytics.all_results"
        static let duration = "analytics.duration"
        static let loadingProgressData = "analytics.loading_progress_data"
        static let completeFirstQuizResults = "analytics.complete_first_quiz_results"
        static let completeQuizzesGrowthData = "analytics.complete_quizzes_growth_data"
        static let lastTimePeriod = "analytics.last_time_period"
        static let points = "analytics.points"
        static let pointsCount = "analytics.points_count"
        static let accuracy = "analytics.accuracy"
        static let progress = "analytics.progress"
        static let streak = "analytics.streak"
        static let best = "analytics.best"
        static let score = "analytics.score"
        static let correctAnswers = "analytics.correct_answers"
        static let wordsPlayed = "analytics.words_played"
        static let totalQuestions = "analytics.total_questions"
        static let difficultyStatistics = "analytics.difficulty_statistics"
        static let individualRatings = "analytics.individual_ratings"
        static let howOtherUsersRateDifficulty = "analytics.how_other_users_rate_difficulty"
        static let noDifficultyRatingsYet = "analytics.no_difficulty_ratings_yet"
        static let totalRatings = "analytics.total_ratings"
        static let viewDetailedStatistics = "analytics.view_detailed_statistics"
    }

    // MARK: - Settings
    enum Settings {
        static let translateDefinitions = "settings.translate_definitions"
        static let showDefinitionsNativeLanguage = "settings.show_definitions_native_language"
        static let accent = "settings.accent"
        static let selectAccent = "settings.select_accent"
        static let notifications = "settings.notifications"
        static let dailyReminders = "settings.daily_reminders"
        static let difficultWords = "settings.difficult_words"
        static let subscription = "settings.subscription"
        static let proUser = "settings.pro_user"
        static let freePlan = "settings.free_plan"
        static let limitedFeaturesAvailable = "settings.limited_features_available"
        static let signedInAs = "settings.signed_in_as"
        static let anonymous = "settings.anonymous"
        static let uploadBackupGoogle = "settings.upload_backup_google"
        static let downloadBackupGoogle = "settings.download_backup_google"
        static let signInSyncWordLists = "settings.sign_in_sync_word_lists"
        static let organization = "settings.organization"
        static let showIdiomsTab = "settings.show_idioms_tab"
        static let sharedDictionaries = "settings.shared_dictionaries"
        static let aboutApp = "settings.about_app"
        static let features = "settings.features"
        static let addOrganizeWords = "settings.add_organize_words"
        static let practiceQuizzesSpelling = "settings.practice_quizzes_spelling"
        static let trackLearningProgress = "settings.track_learning_progress"
        static let importExportWordCollection = "settings.import_export_word_collection"
        static let customizeLearningExperience = "settings.customize_learning_experience"
        static let voicePronunciationSupport = "settings.voice_pronunciation_support"
        static let contactMe = "settings.contact_me"
        static let xTwitter = "settings.x_twitter"
        static let instagram = "settings.instagram"
        static let support = "settings.support"
        static let rateApp = "settings.rate_app"
        static let exportSuccessful = "settings.export_successful"
        static let uploadSuccessful = "settings.upload_successful"
        static let downloadSuccessful = "settings.download_successful"
        static let dailyRemindersDescription = "settings.daily_reminders_description"
        static let difficultWordsDescription = "settings.difficult_words_description"
        static let freeUsersExportLimit = "settings.free_users_export_limit"
        static let appVersion = "settings.app_version"
        static let aboutAppDescription = "settings.about_app_description"
        static let contactSupport = "settings.contact_support"
        static let haveQuestionsSuggestionsFeedback = "settings.have_questions_suggestions_feedback"
        static let signOut = "settings.sign_out"
        static let uploadBackupToGoogle = "settings.upload_backup_to_google"
        static let downloadBackupFromGoogle = "settings.download_backup_from_google"
        static let signInToSyncWordLists = "settings.sign_in_to_sync_word_lists"
        static let importExport = "settings.import_export"
        static let importWords = "settings.import_words"
        static let exportWords = "settings.export_words"
        static let learnMore = "settings.learn_more"
        static let exportWordsTitle = "settings.export_words_title"
        static let proUpgradeDescription = "settings.pro_upgrade_description"
        static let wordListsAndSync = "settings.word_lists_and_sync"
        static let manualSyncModeDescription = "settings.manual_sync_mode_description"
        static let signInToCreateShareWordLists = "settings.sign_in_to_create_share_word_lists"
        static let tagManagementDescription = "settings.tag_management_description"
        static let importExportNote = "settings.import_export_note"
        // Feature descriptions for AboutAppContentView
        static let addOrganizeWordsDescription = "settings.add_organize_words_description"
        static let practiceQuizzesSpellingDescription = "settings.practice_quizzes_spelling_description"
        static let trackLearningProgressDescription = "settings.track_learning_progress_description"
        static let importExportWordCollectionDescription = "settings.import_export_word_collection_description"
        static let customizeLearningExperienceDescription = "settings.customize_learning_experience_description"
        static let voicePronunciationSupportDescription = "settings.voice_pronunciation_support_description"
    }

    // MARK: - Authentication
    enum Auth {
        static let signInBeforeSubscribing = "auth.sign_in_before_subscribing"
        static let signInWithGoogle = "auth.sign_in_with_google"
        static let canAlwaysSignInLater = "auth.can_always_sign_in_later"
        static let linkAdditionalAccounts = "auth.link_additional_accounts"
        static let accountsLinkedSuccessfully = "auth.accounts_linked_successfully"
        static let signOutConfirmation = "auth.sign_out_confirmation"
        static let yourWordsAreSafe = "auth.your_words_are_safe"
        static let cloudSyncDisabled = "auth.cloud_sync_disabled"
        static let signOut = "auth.sign_out"
        static let noWorriesWontRemoveWords = "auth.no_worries_wont_remove_words"
        static let vocabularyStayOnDevice = "auth.vocabulary_stay_on_device"
        static let allVocabularyRemainDevice = "auth.all_vocabulary_remain_device"
        static let wordListsSharedDataCleared = "auth.word_lists_shared_data_cleared"
        static let signInToAccessWordLists = "auth.sign_in_to_access_word_lists"
        static let linkGoogle = "auth.link_google"
        static let linkApple = "auth.link_apple"
        static let signInToSyncWordLists = "auth.sign_in_to_sync_word_lists"
        static let signOutErrorTitle = "auth.sign_out_error_title"
        static let signOutErrorMessage = "auth.sign_out_error_message"
        static let signInRequiredForRestore = "auth.sign_in_required_for_restore"
        static let signInRequiredForProFeatures = "auth.sign_in_required_for_pro_features"
        static let signInFailed = "auth.sign_in_failed"
        static let signOutFailed = "auth.sign_out_failed"
        static let userNotFound = "auth.user_not_found"
        static let networkError = "auth.network_error"
        static let accountLinkingFailed = "auth.account_linking_failed"
        
        // Registration Benefits
        static let registrationBenefits = "auth.registration_benefits"
        static let accessSubscriptionAllDevices = "auth.access_subscription_all_devices"
        static let syncProgressCrossPlatform = "auth.sync_progress_cross_platform"
        static let backupDataSecurely = "auth.backup_data_securely"
        static let registerAnytimeFromSettings = "auth.register_anytime_from_settings"
        static let accountRegistration = "auth.account_registration"
        static let registerForCrossPlatformAccess = "auth.register_for_cross_platform_access"
        static let activeSubscriptionNotification = "auth.active_subscription_notification"
        static let registerToUnlockCrossPlatform = "auth.register_to_unlock_cross_platform"
        static let registerNow = "auth.register_now"
        
        // Subscription Security
        static let subscriptionAccessRestricted = "auth.subscription_access_restricted"
        static let subscriptionAssociatedDifferentAccount = "auth.subscription_associated_different_account"
    }

    // MARK: - Shared Dictionaries
    enum SharedDictionaries {
        static let dictionarySelected = "shared_dictionaries.dictionary_selected"
        static let name = "shared_dictionaries.name"
        static let created = "shared_dictionaries.created"
        static let yourRole = "shared_dictionaries.your_role"
        static let owner = "shared_dictionaries.owner"
        static let editor = "shared_dictionaries.editor"
        static let viewer = "shared_dictionaries.viewer"
        static let editorDescription = "shared_dictionaries.editor_description"
        static let canAddEditDeleteWords = "shared_dictionaries.can_add_edit_delete_words"
        static let canInviteCollaborators = "shared_dictionaries.can_invite_collaborators"
        static let canManageDictionarySettings = "shared_dictionaries.can_manage_dictionary_settings"
        static let viewerDescription = "shared_dictionaries.viewer_description"
        static let canViewAllWords = "shared_dictionaries.can_view_all_words"
        static let cannotMakeChanges = "shared_dictionaries.cannot_make_changes"
        static let cannotInviteOthers = "shared_dictionaries.cannot_invite_others"
        static let collaboratorAddedEmailName = "shared_dictionaries.collaborator_added_email_name"
        static let ofDictionaryCreated = "shared_dictionaries.of_dictionary_created"
        static let freeUsersOneDictionary = "shared_dictionaries.free_users_one_dictionary"
        static let createSharedDictionary = "shared_dictionaries.create_shared_dictionary"
        static let collaborateOthers = "shared_dictionaries.collaborate_others"
        static let deleteDictionary = "shared_dictionaries.delete_dictionary"
        static let yourDictionaries = "shared_dictionaries.your_dictionaries"
        static let dictionaryCountCreated = "shared_dictionaries.dictionary_count_created"
        static let noSharedDictionaries = "shared_dictionaries.no_shared_dictionaries"
        static let createSharedDictionaryCollaborate = "shared_dictionaries.create_shared_dictionary_collaborate"
        static let privateDictionary = "shared_dictionaries.private_dictionary"
        static let saveToPersonalDictionary = "shared_dictionaries.save_to_personal_dictionary"
        static let collaboratorsCount = "shared_dictionaries.collaborators_count"
        static let me = "shared_dictionaries.me"
        static let dictionaryDeletedOrLostAccess = "shared_dictionaries.dictionary_deleted_or_lost_access"
        static let selectRole = "shared_dictionaries.select_role"
        static let editorRole = "shared_dictionaries.editor_role"
        static let collaboratorAddedWithEmailName = "shared_dictionaries.collaborator_added_with_email_name"
        static let beFirstToRateDifficulty = "shared_dictionaries.be_first_to_rate_difficulty"
        static let score = "shared_dictionaries.score"
        static let noSharedDictionariesSidebar = "shared_dictionaries.no_shared_dictionaries_sidebar"
        static let editExample = "words.edit_example"
        static let dictionaries = "shared_dictionaries.dictionaries"
        static let enterDictionaryName = "shared_dictionaries.enter_dictionary_name"
        static let newSharedDictionary = "shared_dictionaries.new_shared_dictionary"
        static let dictionaryNameRequired = "shared_dictionaries.dictionary_name_required"
        static let signInToCreateSharedDictionary = "shared_dictionaries.sign_in_to_create_shared_dictionary"
        static let collaborators = "shared_dictionaries.collaborators"
        static let createdBy = "shared_dictionaries.created_by"
        static let noWordsYet = "shared_dictionaries.no_words_yet"
        static let addWordsToSharedDictionary = "shared_dictionaries.add_words_to_shared_dictionary"
        static let noResults = "shared_dictionaries.no_results"
        static let noWordsMatchFilter = "shared_dictionaries.no_words_match_filter"
        static let dictionaryDetails = "shared_dictionaries.dictionary_details"
        static let collaborativeFeatures = "shared_dictionaries.collaborative_features"
        static let yourScore = "shared_dictionaries.your_score"
        static let yourStatus = "shared_dictionaries.your_status"
        static let averageScore = "shared_dictionaries.average_score"
    }

    // MARK: - Tags
    enum Tags {
        static let manageTags = "tags.manage_tags"
        static let tagsHelpText = "tags.tags_help_text"
        static let noTagsYet = "tags.no_tags_yet"
        static let addFirstTag = "tags.add_first_tag"
        static let addTag = "tags.add_tag"
        static let addFirstTagDescription = "tags.add_first_tag_description"
        static let addTagToStartUsing = "tags.add_tag_to_start_using"
        static let addTags = "tags.add_tags"
        static let createTags = "tags.create_tags"
        static let deleteTag = "tags.delete_tag"
        static let deleteTagConfirmation = "tags.delete_tag_confirmation"
        static let deleteTagCannotUndo = "tags.delete_tag_cannot_undo"
        static let tagName = "tags.tag_name"
        static let tagNameHelp = "tags.tag_name_help"
        static let typeTagName = "tags.type_tag_name"
        static let tagColor = "tags.tag_color"
        static let tagColorHelp = "tags.tag_color_help"
        static let editTag = "tags.edit_tag"
        static let newTag = "tags.new_tag"
        static let tagManagementError = "tags.tag_management_error"
    }

    // MARK: - Coffee Banner
    enum Coffee {
        static let buyMeACoffee = "coffee.buy_me_a_coffee"
        static let maybeLater = "coffee.maybe_later"
        static let enjoyingTheApp = "coffee.enjoying_the_app"
        static let helpfulLearningJourney = "coffee.helpful_learning_journey"
    }

    // MARK: - Paywall
    enum Paywall {
        static let termsOfService = "paywall.terms_of_service"
        static let privacyPolicy = "paywall.privacy_policy"
        static let upgradeToPro = "paywall.upgrade_to_pro"
        static let restorePurchases = "paywall.restore_purchases"
        static let trackProgress = "paywall.track_progress"
        static let seeYourImprovement = "paywall.see_your_improvement"
        static let collaborate = "paywall.collaborate"
        static let learnWithOthers = "paywall.learn_with_others"
        static let everythingYouNeedToMasterVocabulary = "paywall.everything_you_need_to_master_vocabulary"
        static let chooseYourPlan = "paywall.choose_your_plan"
        static let startProSubscription = "paywall.start_pro_subscription"
        static let trustedByLearnersWorldwide = "paywall.trusted_by_learners_worldwide"
        static let appStoreRating = "paywall.app_store_rating"
        static let activeUsers = "paywall.active_users"
        static let wordsAdded = "paywall.words_added"
        static let signInRequired = "paywall.sign_in_required"
        static let joinThousandsUsers = "paywall.join_thousands_users"
        static let bySubscribingAgreeTerms = "paywall.by_subscribing_agree_terms"
        static let proUser = "paywall.pro_user"
        static let freePlan = "paywall.free_plan"
        static let limitedFeaturesAvailable = "paywall.limited_features_available"
        static let noActiveSubscriptionsFound = "paywall.no_active_subscriptions_found"
        static let failedToRestorePurchases = "paywall.failed_to_restore_purchases"
        static let savePercentage = "paywall.save_percentage"
    }

    // MARK: - Difficulty
    enum Difficulty {
        static let new = "difficulty.new"
        static let inProgress = "difficulty.in_progress"
        static let needsReview = "difficulty.needs_review"
        static let mastered = "difficulty.mastered"
    }

    // MARK: - Sorting
    enum Sorting {
        static let latestFirst = "sorting.latest_first"
        static let earliestFirst = "sorting.earliest_first"
        static let alphabetically = "sorting.alphabetically"
        static let byPartOfSpeech = "sorting.by_part_of_speech"
    }

    // MARK: - Input Language
    enum InputLanguage {
        static let autoDetect = "input_language.auto_detect"
    }

    // MARK: - Time Period
    enum TimePeriod {
        static let week = "time_period.week"
        static let month = "time_period.month"
        static let year = "time_period.year"
    }

    // MARK: - Quiz Results
    enum QuizResults {
        static let allResults = "quiz_results.all_results"
        static let noQuizResultsYet = "quiz_results.no_quiz_results_yet"
        static let quiz = "quiz_results.quiz"
        static let accuracy = "quiz_results.accuracy"
        static let correct = "quiz_results.correct"
        static let duration = "quiz_results.duration"
        static let timePeriod = "quiz_results.time_period"
    }

    // MARK: - Word Details
    enum WordDetails {
        static let transcription = "word_details.transcription"
        static let partOfSpeech = "word_details.part_of_speech"
        static let definition = "word_details.definition"
        static let difficulty = "word_details.difficulty"
        static let examples = "word_details.examples"
        static let editExample = "word_details.edit_example"
        static let example = "word_details.example"
        static let typeExampleHere = "word_details.type_example_here"
        static let addExample = "word_details.add_example"
        static let deleteWord = "word_details.delete_word"
        static let deleteFailed = "word_details.delete_failed"
    }

    // MARK: - Word List
    enum WordList {
        static let allWords = "word_list.all_words"
        static let favorite = "word_list.favorite"
        static let manageTags = "word_list.manage_tags"
    }

    // MARK: - Quiz List
    enum QuizList {
        static let quizTypes = "quiz_list.quiz_types"
        static let practiceSettings = "quiz_list.practice_settings"
        static let configureQuizExperience = "quiz_list.configure_quiz_experience"
        static let focusOnWordsNeedReview = "quiz_list.focus_on_words_need_review"
        static let notEnoughWordsReviewYet = "quiz_list.not_enough_words_review_yet"
        static let addWordsToSharedDictionary = "quiz_list.add_words_to_shared_dictionary"
        static let addYourFirstWord = "quiz_list.add_your_first_word"
        static let addMoreWords = "quiz_list.add_more_words"
        static let quizzesHelpTestKnowledge = "quiz_list.quizzes_help_test_knowledge"
        static let wordsAwayFromUnlockingQuizzes = "quiz_list.words_away_from_unlocking_quizzes"
    }

    // MARK: - Quiz Actions
    enum QuizActions {
        static let finish = "quiz_actions.finish"
        static let nextWord = "quiz_actions.next_word"
        static let submitAnswer = "quiz_actions.submit_answer"
        static let numberOfWords = "quiz_actions.number_of_words"
        static let noDifficultWordsAvailable = "quiz_actions.no_difficult_words_available"
        static let yourWordIs = "quiz_actions.your_word_is"
        static let tryHarder = "quiz_actions.try_harder"
        static let incorrectTryAgain = "quiz_actions.incorrect_try_again"
    }

    // MARK: - Tag Selection
    enum TagSelection {
        static let selectTags = "tag_selection.select_tags"
        static let noTagsYet = "tag_selection.no_tags_yet"
        static let youCanSelectUpTo5Tags = "tag_selection.you_can_select_up_to_5_tags"
    }

    // MARK: - Pro Features
    enum ProFeatures {
        static let googleSync = "pro_features.google_sync"
        static let unlimitedExport = "pro_features.unlimited_export"
        static let createSharedDictionaries = "pro_features.create_shared_dictionaries"
        static let advancedAnalytics = "pro_features.advanced_analytics"
        static let prioritySupport = "pro_features.priority_support"
        static let proFeatures = "pro_features.pro_features"
        static let tagManagement = "pro_features.tag_management"
        static let syncWordsAcrossDevices = "pro_features.sync_words_across_devices"
        static let exportUnlimitedWords = "pro_features.export_unlimited_words"
        static let createManageSharedDictionaries = "pro_features.create_manage_shared_dictionaries"
        static let detailedInsights = "pro_features.detailed_insights"
        static let prioritySupportTeam = "pro_features.priority_support_team"
        static let unlockAllProFeatures = "pro_features.unlock_all_pro_features"
        static let organizeWordsWithTags = "pro_features.organize_words_with_tags"
        static let detailedProgressTracking = "pro_features.detailed_progress_tracking"
        static let getPrioritySupport = "pro_features.get_priority_support"
    }

    // MARK: - Error Messages
    enum Errors {
        static let errorUpdatingWordExamples = "errors.error_updating_word_examples"
        static let errorRemovingWord = "errors.error_removing_word"
        static let errorSavingWord = "errors.error_saving_word"
        static let errorUpdatingIdiomExamples = "errors.error_updating_idiom_examples"
        static let errorRemovingIdiom = "errors.error_removing_idiom"
        static let errorSavingIdiom = "errors.error_saving_idiom"
        static let inputNotWord = "errors.input_not_word"
        static let inputCannotBeEmpty = "errors.input_cannot_be_empty"
        static let deviceMutedOrVolumeLow = "errors.device_muted_or_volume_low"
        static let cannotPlayAudio = "errors.cannot_play_audio"
        static let cannotSetupAudioSession = "errors.cannot_setup_audio_session"
        static let exportFailed = "errors.export_failed"
        static let importFailed = "errors.import_failed"
        static let cannotAccessSecurityScopedResource = "errors.cannot_access_security_scoped_resource"
        static let tagAlreadyExists = "errors.tag_already_exists"
        static let tagAlreadyAssignedToWord = "errors.tag_already_assigned_to_word"
        static let tagNotAssignedToWord = "errors.tag_not_assigned_to_word"
        static let authenticationRequired = "errors.authentication_required"
        static let noActiveSubscriptionsFound = "errors.no_active_subscriptions_found"
        static let failedToUpdateWordProgress = "errors.failed_to_update_word_progress"
        static let failedToUpdateWordDifficultyLevel = "errors.failed_to_update_word_difficulty_level"
        static let failedToSaveQuizSession = "errors.failed_to_save_quiz_session"
        static let failedToUpdateUserStatistics = "errors.failed_to_update_user_statistics"
        static let invalidWordId = "errors.invalid_word_id"
        static let wordNotFound = "errors.word_not_found"
        static let failedToCalculateProgress = "errors.failed_to_calculate_progress"
        static let invalidTranslationUrl = "errors.invalid_translation_url"
        static let networkErrorDuringTranslation = "errors.network_error_during_translation"
        static let invalidResponseFromTranslationService = "errors.invalid_response_from_translation_service"
        static let translationFailed = "errors.translation_failed"
        static let invalidUserEmail = "errors.invalid_user_email"
        static let networkErrorOccurred = "errors.network_error_occurred"
        static let syncFailed = "errors.sync_failed"
        static let invalidInputProvided = "errors.invalid_input_provided"
        static let dictionaryNotFound = "errors.dictionary_not_found"
        static let noSubscriptionOfferingsAvailable = "errors.no_subscription_offerings_available"
        static let requestedSubscriptionPackageNotFound = "errors.requested_subscription_package_not_found"
        static let purchaseCouldNotBeCompleted = "errors.purchase_could_not_be_completed"
        static let failedToRestorePreviousPurchases = "errors.failed_to_restore_previous_purchases"
        static let noOfferingsAvailable = "errors.no_offerings_available"
        static let packageNotFound = "errors.package_not_found"
        static let purchaseFailed = "errors.purchase_failed"
        static let restoreFailed = "errors.restore_failed"
        static let exportLimitExceeded = "errors.export_limit_exceeded"
        static let maxTagsReached = "errors.max_tags_reached"
        static let tagAlreadyAssigned = "errors.tag_already_assigned"
        static let tagNotAssigned = "errors.tag_not_assigned"
        static let networkTimeout = "errors.network_timeout"
        static let serverUnreachable = "errors.server_unreachable"
        static let invalidResponse = "errors.invalid_response"
        static let noInternetConnection = "errors.no_internet_connection"
        static let missingAPIKey = "errors.missing_api_key"
        static let decodingError = "errors.decoding_error"
        static let invalidURL = "errors.invalid_url"
        static let noData = "errors.no_data"
        static let saveFailed = "errors.save_failed"
        static let readFailed = "errors.read_failed"
        static let dataCorrupted = "errors.data_corrupted"
        static let invalidInput = "errors.invalid_input"
        static let missingField = "errors.missing_field"
        static let unknownError = "errors.unknown_error"
        static let updateFailed = "errors.update_failed"
        static let deleteFailed = "errors.delete_failed"
        static let permissionDenied = "errors.permission_denied"
        static let userNotAuthenticated = "errors.user_not_authenticated"
        static let dictionaryLimitReached = "errors.dictionary_limit_reached"
    }

    // MARK: - Empty States
    enum EmptyStates {
        static let noWordsYet = "empty_states.no_words_yet"
        static let noIdiomsYet = "empty_states.no_idioms_yet"
        static let noFavoriteWords = "empty_states.no_favorite_words"
        static let noSearchResults = "empty_states.no_search_results"
        static let startImprovingVocabulary = "empty_states.start_improving_vocabulary"
        static let tapHeartIconToAddFavorites = "empty_states.tap_heart_icon_to_add_favorites"
        static let tryDifferentSearchTerm = "empty_states.try_different_search_term"
    }

    // MARK: - Notifications
    enum Notifications {
        static let timeToPractice = "notifications.time_to_practice"
        static let practiceVocabularyToday = "notifications.practice_vocabulary_today"
        static let practiceDifficultWords = "notifications.practice_difficult_words"
        static let difficultWordsChallenge = "notifications.difficult_words_challenge"
        static let testDictionaryInvitation = "notifications.test_dictionary_invitation"
        static let testDictionaryInvitationBody = "notifications.test_dictionary_invitation_body"
    }

    // MARK: - macOS UI
    enum MacOS {
        static let myDictionary = "macos.my_dictionary"
        static let aboutMyDictionary = "macos.about_my_dictionary"
        static let debugPanel = "macos.debug_panel"
        static let settings = "macos.settings"
        static let about = "macos.about"
        static let sharedDictionaries = "macos.shared_dictionaries"
    }

    // MARK: - Filter Display Names
    enum FilterDisplay {
        static let allWords = "filter_display.all_words"
        static let favorite = "filter_display.favorite"
        static let search = "filter_display.search"
        static let tag = "filter_display.tag"
        static let new = "filter_display.new"
        static let inProgress = "filter_display.in_progress"
        static let needsReview = "filter_display.needs_review"
        static let mastered = "filter_display.mastered"
        static let noWordsYet = "filter_display.no_words_yet"
        static let noFavoriteWords = "filter_display.no_favorite_words"
        static let noSearchResults = "filter_display.no_search_results"
        static let noTaggedWords = "filter_display.no_tagged_words"
        static let noNewWords = "filter_display.no_new_words"
        static let noWordsInProgress = "filter_display.no_words_in_progress"
        static let noWordsNeedReview = "filter_display.no_words_need_review"
        static let noMasteredWords = "filter_display.no_mastered_words"
        static let startBuildingVocabulary = "filter_display.start_building_vocabulary"
        static let tapHeartIconToAddFavorites = "filter_display.tap_heart_icon_to_add_favorites"
        static let tryDifferentSearchTerm = "filter_display.try_different_search_term"
        static let addTagsToOrganize = "filter_display.add_tags_to_organize"
        static let newWordsAppearHere = "filter_display.new_words_appear_here"
        static let wordsAppearHereAsYouPractice = "filter_display.words_appear_here_as_you_practice"
        static let wordsNeedMorePractice = "filter_display.words_need_more_practice"
    }

    // MARK: - Collaborator Roles
    enum CollaboratorRoles {
        static let owner = "collaborator_roles.owner"
        static let editor = "collaborator_roles.editor"
        static let viewer = "collaborator_roles.viewer"
    }

    // MARK: - Tag Colors
    enum TagColors {
        static let blue = "tag_colors.blue"
        static let red = "tag_colors.red"
        static let green = "tag_colors.green"
        static let orange = "tag_colors.orange"
        static let purple = "tag_colors.purple"
        static let pink = "tag_colors.pink"
        static let yellow = "tag_colors.yellow"
        static let gray = "tag_colors.gray"
    }

    // MARK: - Shared Dictionary Selection
    enum SharedDictionarySelection {
        static let selectDictionary = "shared_dictionary_selection.select_dictionary"
        static let dictionarySelected = "shared_dictionary_selection.dictionary_selected"
        static let addToShared = "shared_dictionary_selection.add_to_shared"
        static let addWordToSharedDictionary = "shared_dictionary_selection.add_word_to_shared_dictionary"
        static let unknown = "shared_dictionary_selection.unknown"
    }

    // MARK: - Pro Upgrade Messages
    enum ProUpgrade {
        static let upgradeToProProgressDetails = "pro_upgrade.upgrade_to_pro_progress_details"
        static let upgradeToProVocabularyGrowth = "pro_upgrade.upgrade_to_pro_vocabulary_growth"
        static let timePeriod = "pro_upgrade.time_period"
    }

    // MARK: - Collaborator Management
    enum CollaboratorManagement {
        static let role = "collaborator_management.role"
        static let addCollaborator = "collaborator_management.add_collaborator"
        static let emailAddressRequired = "collaborator_management.email_address_required"
        static let validEmailAddress = "collaborator_management.valid_email_address"
        static let makeViewer = "collaborator_management.make_viewer"
        static let makeEditor = "collaborator_management.make_editor"
        static let remove = "collaborator_management.remove"
        static let add = "collaborator_management.add"
        static let deleteDictionary = "collaborator_management.delete_dictionary"
        static let deleteDictionaryConfirmation = "collaborator_management.delete_dictionary_confirmation"
        static let stopWatching = "collaborator_management.stop_watching"
        static let stopWatchingDictionary = "collaborator_management.stop_watching_dictionary"
        static let stopWatchingDictionaryConfirmation = "collaborator_management.stop_watching_dictionary_confirmation"
        static let `continue` = "collaborator_management.continue"
        static let dictionaryNotFound = "collaborator_management.dictionary_not_found"
        static let dictionaryDetails = "collaborator_management.dictionary_details"
        static let unknown = "collaborator_management.unknown"
    }

    // MARK: - Quiz Types
    enum QuizTypes {
        static let spellingQuiz = "quiz_types.spelling_quiz"
        static let chooseDefinition = "quiz_types.choose_definition"
        static let testSpellingSkills = "quiz_types.test_spelling_skills"
        static let selectCorrectDefinition = "quiz_types.select_correct_definition"
        static let greatJobCompletedSpellingQuiz = "quiz_types.great_job_completed_spelling_quiz"
        static let greatJobCompletedDefinitionQuiz = "quiz_types.great_job_completed_definition_quiz"
    }

    // MARK: - English Accents
    enum EnglishAccents {
        static let australian = "english_accents.australian"
        static let canadian = "english_accents.canadian"
        static let british = "english_accents.british"
        static let indian = "english_accents.indian"
        static let american = "english_accents.american"
        static let belgian = "english_accents.belgian"
        static let singaporean = "english_accents.singaporean"
        static let irish = "english_accents.irish"
        static let southAfrican = "english_accents.south_african"
    }

    // MARK: - Idiom Filters
    enum IdiomFilters {
        static let allIdioms = "idiom_filters.all_idioms"
        static let favorite = "idiom_filters.favorite"
        static let search = "idiom_filters.search"
        static let noIdiomsYet = "idiom_filters.no_idioms_yet"
        static let noFavoriteWords = "idiom_filters.no_favorite_words"
        static let noSearchResults = "idiom_filters.no_search_results"
        static let startImprovingVocabulary = "idiom_filters.start_improving_vocabulary"
        static let tapHeartIconToAddFavorites = "idiom_filters.tap_heart_icon_to_add_favorites"
        static let tryDifferentSearchTerm = "idiom_filters.try_different_search_term"
    }

    // MARK: - Part of Speech
    enum PartOfSpeech {
        enum Full {
            static let noun = "part_of_speech.full.noun"
            static let verb = "part_of_speech.full.verb"
            static let adjective = "part_of_speech.full.adjective"
            static let adverb = "part_of_speech.full.adverb"
            static let conjunction = "part_of_speech.full.conjunction"
            static let pronoun = "part_of_speech.full.pronoun"
            static let preposition = "part_of_speech.full.preposition"
            static let exclamation = "part_of_speech.full.exclamation"
            static let interjection = "part_of_speech.full.interjection"
            static let unknown = "part_of_speech.full.unknown"
        }

        enum Short {
            static let noun = "part_of_speech.short.noun"
            static let verb = "part_of_speech.short.verb"
            static let adjective = "part_of_speech.short.adjective"
            static let adverb = "part_of_speech.short.adverb"
            static let conjunction = "part_of_speech.short.conjunction"
            static let pronoun = "part_of_speech.short.pronoun"
            static let preposition = "part_of_speech.short.preposition"
            static let exclamation = "part_of_speech.short.exclamation"
            static let interjection = "part_of_speech.short.interjection"
            static let unknown = "part_of_speech.short.unknown"
        }
    }
}
